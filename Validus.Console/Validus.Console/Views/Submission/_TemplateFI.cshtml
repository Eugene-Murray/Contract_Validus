@model Validus.Models.Submission

<form class="form" action="/submission/CreateSubmission" method="post">

	@Html.ValidationSummary(true)
		
	<div class="row-fluid" data-bind="css: { hide: IsInitialised() }">
		<div class="span12">
			<img class="val-loading val-loading-100x100" 
				src="@Url.Content("~/Content/images/loading-100x100.gif")" 
				alt="Loading..." title="Loading..." />
		</div>
	</div>
	
	<fieldset class="hide" data-bind="css: { hide: !IsInitialised() }">
		<legend class="hide">New Submission</legend>

		<div class="modal hide val-alert val-broker-lossratio-modal" style="position: absolute; width: 900px; margin-left: -450px;">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">
					<i class="icon-remove"></i>
				</button>
				<span><i class="icon-map-marker"></i>Broker Loss Ratio Per Month</span>
			</div>
			<div class="modal-body">
				<div class="val-broker-lossratio-graph" style="width: 800px;"></div>
			</div>
			<div class="modal-footer">
				<button class="btn btn-small" data-dismiss="modal" aria-hidden="true">Close</button>
			</div>
		</div>

		<input type="hidden" class="hide" name="DefaultDomicile" value="@ViewBag.DefaultDomicile" />
		<input type="hidden" class="hide" name="DefaultQuoteExpiry" value="@ViewBag.DefaultQuoteExpiry" />
		<input type="hidden" class="hide" name="DefaultOffice" value="@ViewBag.DefaultOffice" />
		<input type="hidden" class="hide" name="DefaultUnderwriter" value="@ViewBag.DefaultUnderwriter" />
		<input type="hidden" class="hide" name="DefaultPolicyType" value="@ViewBag.DefaultPolicyType" />
        <input type="hidden" class="hide" name="DefaultNonLondonBroker" value="@ViewBag.DefaultNonLondonBroker" />

		<div class="row-fluid">
			
			<div class="span6">
			    
				<div class="row-fluid">
					<div class="span10 control-group">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.InsuredName)
							<abbr title="The Insured Name field is required">*</abbr>
						</label>
						@Html.TextBoxFor(model => model.InsuredName, new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-large span12" },
							{ "data-bind", "bootstrap-typeahead: " +
							               "{ " +
							               "url: window.ValidusServicesUrl + 'Insured', " +
							               "id: Model.InsuredId, " +
							               "data: Model.InsuredName, " +
							               "options: { uniqueField: 'Id', labelField: 'Name', valueField: 'Name' }, " +
							               "onInvalid: Functions.InvalidInsuredSelected " +
							               "}, " +
							               "validate: IsInitialised" }
						})
					</div>
					<div class="span1">
						<a href="#" data-bind="click: click_AddAdditionalInsured" class="addInsured" data-toggle="popover" title="Add Additional Insured" tabindex="-1">
							<i class="icon-plus-sign icon-black"></i>
						</a>  
					</div>
					<div class="span1">
						<a href="#" class="showAuditTrail" data-toggle="popover" title="Audits" tabindex="-1">
							<i class="icon-file icon-black"></i>
						</a>  
					</div>
				</div>
                
                
				<!-- ko foreach: Model.AdditionalInsuredList -->
				<div class="row-fluid">
					<div class="span7 control-group">
						<label class="control-label">
							Additional Insured
						</label>
						@Html.TextBoxFor(model => model.InsuredName, new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-large span12" },
							{ "data-bind", "bootstrap-typeahead: " +
							               "{ " +
							               "url: window.ValidusServicesUrl + 'Insured#Add', " +
							               "id: InsuredId, " +
							               "data: InsuredName, " +
							               "options: { uniqueField: 'Id', labelField: 'Name', valueField: 'Name' }, " +
							               "onInvalid: $root.Functions.InvalidInsuredSelected " +
							               "}" }
						})
					</div>
					<div class="span3 control-group">
						<label class="control-label">
							Insured Type
							<abbr title="Insured Type is required">*</abbr>
						</label>
						@Html.DropDownList("InsuredType", new List<SelectListItem>(), new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-large span12" },
							{ "data-bind", "options: InsuredTypes, " +
							               "value: InsuredType "}                                
						})
					</div>
					<div class="span1">
						<a  href="#" tabindex="-1" data-bind="click: $parent.click_RemoveAdditionalInsured">
							<i class="icon-minus"></i>
						</a>  
					</div>
				</div>
				<!-- /ko -->
                

				<div class="row-fluid">
					<div class="span12 control-group">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.BrokerCode)
							<abbr title="Broker is required">*</abbr>
						</label>
						@Html.TextBoxFor(model => model.BrokerCode, new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-large span12" },
							{ "data-bind", "bootstrap-typeahead: " +
							               "{ " +
							               "url: window.ValidusServicesUrl + 'Broker', " +
							               "id: Model.BrokerSequenceId, " +
							               "data: Model.BrokerCode, " +
							               "dependents: { Psu: Model.BrokerPseudonym, GrpCd: Model.BrokerGroupCode }, " +
							               "options: { uniqueField: 'Id', labelField: 'Name', valueField: 'Code' }, " +
							               "onInvalid: Functions.InvalidBrokerSelected " +
							               "}, " +
							               "validate: IsInitialised" }
						})
					</div>
				</div>
                
				<div class="row-fluid">
					<div class="span5 control-group">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.BrokerContact)
						</label>
						@Html.TextBoxFor(model => model.BrokerContact, new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-large span12" },
							{ "data-bind", "bootstrap-typeahead: " +
							               "{ " +
							               "url: window.ValidusServicesUrl + 'BrokerContact', " +
							               "data: Model.BrokerContact, " +
							               "query: { brokerCode: Model.BrokerCode }, " +
							               "options: { labelField: 'Name', valueField: 'Name', callback: typeAheadCreateBrokerContact } " +
							               "}, " +
							               "validate: IsInitialised" }
						})
					</div>
                    
					<div class="span1 control-group" title="Add New Broker Contact">
						<a href="#" class="addNewBrokerContact" data-bind="click: showCreateBrokerContact" data-toggle="popover" tabindex="-1" data-original-title="Create New Broker Contact">
							<i class="icon-user icon-black"></i>
						</a>  
					</div>

					<div class="span6 control-group">
						<label class="control-label">
							Non-London Broker
						</label>
						@Html.TextBoxFor(model => model.NonLondonBrokerName, new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-large span12" },
							{ "data-bind", "bootstrap-typeahead: " +
							               "{ " +
							               "url: window.ValidusServicesUrl + 'NonLondonBroker', " +
							               "id: Model.NonLondonBrokerCode, " +
							               "data: Model.NonLondonBrokerName, " +
							               "query: { office: Model.QuotingOfficeId }," +
							               "options: { uniqueField: 'Code', labelField: 'Name', valueField: 'Name' } " +
							               "}, " +
							               "validate: IsInitialised" }
						})
					</div>
				</div>

				<div class="row-fluid">
					<div class="span6 control-group">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.UnderwriterCode)
							<abbr title="Underwriter is required">*</abbr>
						</label>
						@Html.TextBoxFor(model => model.UnderwriterCode, new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-large span12" },
							{ "data-bind", "bootstrap-typeahead: " +
							               "{ " +
							               "url: window.ValidusServicesUrl + 'Underwriter#1', " +
							               "data: Model.UnderwriterCode, " +
							               "options: { uniqueField: 'Code', labelField: 'Name', valueField: 'Code' }, " +
							               "onInvalid: Functions.InvalidUnderwriterSelected " +
							               "}, " +
							               "validate: IsInitialised" }
						})
					</div>
					<div class="span6 control-group">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.UnderwriterContactCode)
							<abbr title="Underwriter contact is required">*</abbr>
						</label>
						@Html.TextBoxFor(model => model.UnderwriterContactCode, new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-large span12" },
							{ "data-bind", "bootstrap-typeahead: " +
							               "{ " +
							               "url: window.ValidusServicesUrl + 'Underwriter#2', " +
							               "data: Model.UnderwriterContactCode, " +
							               "options: { uniqueField: 'Code', labelField: 'Name', valueField: 'Code' }, " +
							               "onInvalid: Functions.InvalidUnderwriterSelected " +
							               "}, " +
							               "validate: IsInitialised" }
						})
					</div>
				</div>

				<div class="row-fluid">
					<div class="span3 control-group">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.QuotingOffice)
							<abbr title="Office is required">*</abbr>
						</label>
						@Html.DropDownListFor(model => model.QuotingOfficeId, new List<SelectListItem>(), new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-large span12" },
							{ "data-bind", "options: ConsoleApp.OfficesList, " +
							               "optionsValue: 'Code', " +
							               "optionsText: 'Name', " +
							               "value: Model.QuotingOfficeId, " +
							               "validate: IsInitialised" }                                
						})
					</div>
					<div class="span3 control-group">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.Domicile)
							<abbr title="Domicile is required">*</abbr>
						</label>
						@Html.TextBoxFor(model => model.Domicile, new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-large span12" },
							{ "data-bind", "bootstrap-typeahead: " +
							               "{ " +
							               "url: window.ValidusServicesUrl + 'Domicile', " +
							               "data: Model.Domicile, " +
							               "options: { uniqueField: 'Code', labelField: 'Name', valueField: 'Code' }, " +
							               "onInvalid: Functions.InvalidDomicileSelected " +
							               "}, " +
							               "validate: IsInitialised" }
						})
					</div>
					<div class="span3 control-group">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.Leader)
						</label>
						@Html.TextBoxFor(model => model.Leader, new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-large span12" },
							{ "data-bind", "bootstrap-typeahead: " +
							               "{ " +
							               "url: window.ValidusServicesUrl + 'Leader', " +
							               "id: Model.LeaderNo, " +
							               "data: Model.Leader, " +
							               "options: { uniqueField: 'No', labelField: 'Psu', valueField: 'Psu' }, " +
							               "onInvalid: Functions.InvalidLeaderSelected " +
							               "}, " +
							               "validate: IsInitialised" }
						})
					</div>
					<div class="span3 control-group">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.Brokerage)
						</label>
						@Html.TextBoxFor(model => model.Brokerage, new Dictionary<string, object> 
						{ 
							{ "id", ""},
							{ "class", "input-small span12" },
							{ "data-bind", "value: Model.Brokerage, " +
							               "validate: IsInitialised" }
						})
					</div>
				</div>

				<div class="row-fluid" data-bind="visible: ValidationErrors().length > 0">
					<div class="span12">
						<div class="alert alert-error">
							<b>Validation Errors:</b><br />
							<ul data-bind="html: ValidationErrors">
							</ul>
						</div>
					</div>
				</div>
			</div>
			<!-- Right Side Bar -->
            
			@Html.Action("_SubmissionSideBar", "Submission")
            
			<!-- Right Side Bar -->

		</div>

		<div class="row-fluid">
			<div class="span12">
				<div class="tabbable">
					<ul class="nav nav-tabs">
						<!-- ko foreach: Model.ActiveOptions -->
						<li>
							<a data-toggle="tab">
								<span data-bind="text: VersionTitle"></span>
							</a>
						</li>
						<!-- /ko -->
						<li>
							<a class="btn btn-link" data-bind="click: AddOption">+</a>
						</li>
                        <li><a href="#" data-toggle="tab">Market Wordings</a></li>
                        <li><a href="#" data-toggle="tab">Terms and Conditions</a></li>
                        <li><a href="#" data-toggle="tab">Subjectivities</a></li>
					</ul>
					<div class="tab-content">
                        <!-- ko foreach: { data: Model.Options, afterRender: InitialiseTabs } -->
						<div class="tab-pane">
							@Html.Action("_OptionTemplateFI", "Submission")
						</div>
                        <!-- /ko -->
                        <div class="tab-pane">@Html.Action("_MarketWordingTemplate", "Submission")</div>
                        <div class="tab-pane">@Html.Action("_TermsNConditionTemplate", "Submission")</div>
                        <div class="tab-pane">@Html.Action("_SubjectToClauseWordingTemplate", "Submission")</div>
					</div>
				</div>
			</div>
		</div>
        
        @Html.Partial("_SaveQuoteSheetButtons")

		<div class="row-fluid">
		    <div class="span12">
		        @Html.Partial("_QuoteComparisonTable", "Submission")
		    </div>
		</div>

	</fieldset>
    
    <div class="val-submission-insuredName-audits" style="visibility:hidden">
        <table class="val-worldcheck-auditTrails-datatable table table-condensed table-bordered table-hover datatable">
            <caption>WorldCheck Audit</caption>
            <thead>
                <tr>
                    <th class="val-worldcheck-Audit-description">Name</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</form>

<!-- Create Broker popover -->
                                    
 <div id="popover_content_wrapper" style="visibility:hidden">
    @Html.Action("_CreateBrokerContact", "Submission")
</div>



<!-- Create Broker pop over -->