@model Validus.Models.Submission

<form class="form" action="/submission/CreateSubmission" method="post">

    @Html.ValidationSummary(true)
		
    <div class="row-fluid" data-bind="css: { hide: IsInitialised() }">
        <div class="span12">
            <img class="val-loading val-loading-100x100" 
                 src="@Url.Content("~/Content/images/loading-100x100.gif")" 
                 alt="Loading..." title="Loading..." />
        </div>
    </div>
	
    <fieldset class="hide" data-bind="css: { hide: !IsInitialised() }">
        <legend class="hide">New Submission</legend>

        <div class="modal hide val-alert val-broker-lossratio-modal" style="position: absolute; width: 900px; margin-left: -450px;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    <i class="icon-remove"></i>
                </button>
                <span><i class="icon-map-marker"></i>Broker Loss Ratio Per Month</span>
            </div>
            <div class="modal-body">
                <div class="val-broker-lossratio-graph" style="width: 800px;"></div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-small" data-dismiss="modal" aria-hidden="true">Close</button>
            </div>
        </div>

        <input type="hidden" class="hide" name="DefaultDomicile" value="@ViewBag.DefaultDomicile" />
        <input type="hidden" class="hide" name="DefaultQuoteExpiry" value="@ViewBag.DefaultQuoteExpiry" />
        <input type="hidden" class="hide" name="DefaultOffice" value="@ViewBag.DefaultOffice" />
        <input type="hidden" class="hide" name="DefaultUnderwriter" value="@ViewBag.DefaultUnderwriter" />
        <input type="hidden" class="hide" name="DefaultPolicyType" value="@ViewBag.DefaultPolicyType" />
        <input type="hidden" class="hide" name="NonLondonBroker" value="@ViewBag.NonLondonBroker" />

        <div class="row-fluid">
            <div class="span6">
                <div class="row-fluid">
                    <div class="span11">
                        <label class="control-label">
                            @Html.DisplayNameFor(model => model.InsuredName)
                            <abbr title="Insured name is required">*</abbr>
                        </label>
                        @Html.TextBoxFor(model => model.InsuredName, new Dictionary<string, object> 
                            { 
                                { "id", ""},
                                { "class", "span12 typeahead" },
                                { "data-bind", "value: Model.InsuredName" },
                                { "data-rest", "Insured" }
                            })
                        @Html.ValidationMessageFor(model => model.InsuredName, null, new { @class = "help-block" })
                    </div>
                    <div class="span1">
                        <a href="#" class="showAuditTrail" data-toggle="popover" title="Audits"><i class="icon-file icon-black"></i></a>  
                </div>
                </div>
                <div class="row-fluid">
                    <div class="span12">
                        <label class="control-label">
                            @Html.DisplayNameFor(model => model.BrokerCode)
                            <abbr title="Broker is required">*</abbr>
                        </label>
                        @Html.TextBoxFor(model => model.BrokerCode, new 
                            { 
                                @id = "",
                                @class = "input-xlarge span12 typeahead",
                                @data_bind = "value: Model.Broker",
                                @data_rest = "Broker"
                            })
                        @Html.ValidationMessageFor(model => model.BrokerCode, null, new { @class = "help-block" })
                    </div>
                </div>
                
                <div class="row-fluid">
					<div class="span6">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.BrokerContact)
						</label>
						@Html.TextBoxFor(model => model.BrokerContact, new Dictionary<string, object> 
							{ 
								{ "id", ""},
								{ "class", "input-xlarge span12 typeahead" },
								{ "data-bind", "value: Model.BrokerContact" },
								{ "data-rest", "BrokerContact" }
							})
						@Html.ValidationMessageFor(model => model.BrokerContact, null, new { @class = "help-block" })
					</div>
					<div class="span6">
						<label class="control-label">
							Non-London Broker
						</label>
						@Html.TextBoxFor(model => model.NonLondonBrokerName, new Dictionary<string, object> 
							{ 
								{ "id", ""},
								{ "class", "input-large span12 typeahead" },
								{ "data-bind", "value: Model._NonLondonBroker" },
								{ "data-rest", "NonLondonBroker" }
							})
						@Html.ValidationMessageFor(model => model.NonLondonBrokerName, null, new { @class = "help-block" })
					</div>
				</div>
				<div class="row-fluid">
					<div class="span6">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.UnderwriterCode)
							<abbr title="Underwriter is required">*</abbr>
						</label>
						@Html.TextBoxFor(model => model.UnderwriterCode, new Dictionary<string, object> 
							{ 
								{ "id", ""},
								{ "class", "input-small span12 typeahead" },
								{ "data-bind", "value: Model._Underwriter" },
								{ "data-rest", "Underwriter" }
							})
						@Html.ValidationMessageFor(model => model.UnderwriterCode, null, new { @class = "help-block" })
					</div>
					<div class="span6">
						<label class="control-label">
							@Html.DisplayNameFor(model => model.UnderwriterContactCode)
							<abbr title="Underwriter contact is required">*</abbr>
						</label>
						@Html.TextBoxFor(model => model.UnderwriterContactCode, new Dictionary<string, object> 
							{ 
								{ "id", ""},
								{ "class", "input-small span12 typeahead" },
								{ "data-bind", "value: Model._UnderwriterContact" },
								{ "data-rest", "Underwriter" }
							})
						@Html.ValidationMessageFor(model => model.UnderwriterContactCode, null, new { @class = "help-block" })
					</div>
				</div>

                @*<div class="row-fluid">
                    <div class="span6">
                        <label class="control-label">
                            @Html.DisplayNameFor(model => model.BrokerContact)
                        </label>
                        <div class="row-fluid">
                            <div class="span12">
                                @Html.TextBoxFor(model => model.BrokerContact, new Dictionary<string, object> 
                                    { 
                                        { "id", ""},
                                        { "class", "input-xlarge span12 typeahead" },
                                        { "data-bind", "value: Model.BrokerContact" },
                                        { "data-rest", "BrokerContact" }
                                    })
                               
                            </div>
                        </div>  
                        @Html.ValidationMessageFor(model => model.BrokerContact, null, new { @class = "help-block" })
                    </div>
                    <div class="span6">
                        <label class="control-label">
                            Non-London Broker
                        </label>
                        @Html.TextBoxFor(model => model.NonLondonBrokerName, new Dictionary<string, object> 
                            { 
                                { "id", ""},
                                { "class", "input-large span12 typeahead" },
                                { "data-bind", "value: Model._NonLondonBroker" },
                                { "data-rest", "NonLondonBroker" }
                            })
                        @Html.ValidationMessageFor(model => model.NonLondonBrokerName, null, new { @class = "help-block" })
                    </div>
                </div>
                <div class="row-fluid">
                    <div class="span6">
                        <label class="control-label">
                            @Html.DisplayNameFor(model => model.UnderwriterCode)
                            <abbr title="Underwriter is required">*</abbr>
                        </label>
                        @Html.TextBoxFor(model => model.UnderwriterCode, new Dictionary<string, object> 
                            { 
                                { "id", ""},
                                { "class", "input-small span12 typeahead" },
                                { "data-bind", "value: Model._Underwriter" },
                                { "data-rest", "Underwriter" }
                            })
                        @Html.ValidationMessageFor(model => model.UnderwriterCode, null, new { @class = "help-block" })
                    </div>
                    <div class="span6">
                        <label class="control-label">
                            @Html.DisplayNameFor(model => model.UnderwriterContactCode)
                            <abbr title="Underwriter contact is required">*</abbr>
                        </label>
                        @Html.TextBoxFor(model => model.UnderwriterContactCode, new Dictionary<string, object> 
                            { 
                                { "id", ""},
                                { "class", "input-small span12 typeahead" },
                                { "data-bind", "value: Model._UnderwriterContact" },
                                { "data-rest", "Underwriter" }
                            })
                        @Html.ValidationMessageFor(model => model.UnderwriterContactCode, null, new { @class = "help-block" })
                    </div>
                </div>*@
                <div class="row-fluid">
                    <div class="span3">
                        <label class="control-label">
                            @Html.DisplayNameFor(model => model.QuotingOffice)
                            <abbr title="Office is required">*</abbr>
                        </label>
                        @Html.DropDownListFor(model => model.QuotingOffice, new List<SelectListItem>(), new Dictionary<string, object> 
                            { 
                                { "id", ""},
                                { "class", "input-large span12" },
                                { "data-bind", "options: ConsoleApp.OfficesList, optionsValue: 'Code', optionsText: 'Name', value: Model.QuotingOfficeId" }                                
                            })
                        @Html.ValidationMessageFor(model => model.QuotingOffice, null, new { @class = "help-block" })
                    </div>
                    <div class="span3">
                        <label class="control-label">
                            @Html.DisplayNameFor(model => model.Domicile)
                            <abbr title="Domicile is required">*</abbr>
                        </label>
                        @Html.TextBoxFor(model => model.Domicile, new Dictionary<string, object> 
                            { 
                                { "id", ""},
                                { "class", "input-small span12 typeahead" },
                                { "data-bind", "value: Model._Domicile" },
                                { "data-rest", "Domicile" }
                            })
                        @Html.ValidationMessageFor(model => model.Domicile, null, new { @class = "help-block" })
                    </div>
                    <div class="span3">
                        <label class="control-label">
                            @Html.DisplayNameFor(model => model.Leader)
                        </label>
                        @Html.TextBoxFor(model => model.Leader, new Dictionary<string, object> 
                            { 
                                { "id", ""},
                                { "class", "input-small span12 typeahead" },
                                { "data-bind", "value: Model._Leader" },
                                { "data-rest", "Leader" }
                            })
                        @Html.ValidationMessageFor(model => model.Leader, null, new { @class = "help-block" })
                    </div>
                    <div class="span3">
                        <label class="control-label">
                            @Html.DisplayNameFor(model => model.Brokerage)
                        </label>
                        @Html.TextBoxFor(model => model.Brokerage, new Dictionary<string, object> 
                            { 
                                { "id", ""},
                                { "class", "input-small span12" },
                                { "data-bind", "value: Model.Brokerage" }
                            })
                        @Html.ValidationMessageFor(model => model.Brokerage, null, new { @class = "help-block" })
                    </div>
                </div>

                <div class="row-fluid" data-bind="visible: ValidationErrors().length > 0">
                    <div class="span12">
                        <div class="alert alert-error">
                            <b>Validation Errors:</b><br />
                            <ul data-bind="html: ValidationErrors">
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Right Side Bar -->
            
            @Html.Action("_SubmissionSideBar", "Submission")
            
            <!-- Right Side Bar -->
        </div>

        <div class="row-fluid">
            <div class="span12">
                <div class="tabbable">
                    <ul class="nav nav-tabs">
                        <!-- ko foreach: Model.Options -->
                        <li>
                            <a data-toggle="tab">
                                <span data-bind="text: VersionTitle"></span>
                            </a>
                        </li>
                        <!-- /ko -->
                        <li>
							<a class="btn btn-link" data-bind="click: AddOption">+</a>
                        </li>
                        <li><a href="#" data-toggle="tab">Market Wordings</a></li>
                        <li><a href="#" data-toggle="tab">Terms and Conditions</a></li>
                        <li><a href="#" data-toggle="tab">Subjectivities</a></li>
                    </ul>
                    <div class="tab-content">
                        <!-- ko foreach: { data: Model.Options, afterRender: InitialiseTabs } -->
                        <div class="tab-pane">
                            @Html.Action("_OptionTemplateHM", "Submission")
                        </div>
                        <!-- /ko -->
                        <div class="tab-pane">@Html.Action("_MarketWordingTemplate", "Submission")</div>
                        <div class="tab-pane">@Html.Action("_TermsNConditionTemplate", "Submission")</div>
                        <div class="tab-pane">@Html.Action("_SubjectToClauseWordingTemplate", "Submission")</div>
                    </div>
                </div>
            </div>
        </div>

        @Html.Partial("_SaveQuoteSheetButtons")

        <div class="row-fluid">
            <div class="span12">
                @Html.Partial("_QuoteComparisonTable", "Submission")
            </div>
        </div>

    </fieldset>
    
    <div class="val-submission-insuredName-audits" style="visibility:hidden">
        <table class="val-worldcheck-auditTrails-datatable table table-condensed table-bordered table-hover datatable">
            <caption>WorldCheck Audit</caption>
            <thead>
                <tr>
                    <th class="val-worldcheck-Audit-description">Name</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
    
<!-- Create Broker popover -->
                                    
 <div class="popover_content_wrapper" style="visibility:hidden">
    @Html.Action("_CreateBrokerContact", "Submission")
</div>

<!-- Create Broker pop over -->

</form>





