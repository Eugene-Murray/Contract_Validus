@model Validus.Console.DTO.WorkflowItem

<div class="val-padding">
    <h5>
        @if (Model.Status == Validus.Console.DTO.WorkflowItemStatus.Available)
        {
            <img src="~/content/images/email-icon.png" title="Available" />
        }
        else if (Model.Status == Validus.Console.DTO.WorkflowItemStatus.Open)
        {
            <img src="~/content/images/email-open-icon.png" title="Open" />
        }
        else if (Model.Status == Validus.Console.DTO.WorkflowItemStatus.Allocated)
        {
            <img src="~/content/images/taskallocated.gif" title="Allocated" />
        }
        @if (Model.WorkflowType == Validus.Console.DTO.WorfklowItemType.Normal)
        {
            <span>Workflow Task (<a class="btn-link val_open_tasklist_page val-link" 
            data-target="@System.Configuration.ConfigurationManager.AppSettings["WorkflowTasklistNormal"]@Model.Activity">@Html.DisplayTextFor(model => model.Activity)</a>)</span>
        }
        else if (Model.WorkflowType == Validus.Console.DTO.WorfklowItemType.ContractCertainty)
        {
            <span>Workflow Task (<a class="btn-link val_open_tasklist_page val-link" 
            data-target="@System.Configuration.ConfigurationManager.AppSettings["WorkflowTasklistCC"]@Model.Activity">@Html.DisplayTextFor(model => model.Activity)</a>)</span>
        }
    </h5>

    <hr />

    <div class="row-fluid">
        <div class="span6">
            <strong>@Html.DisplayNameFor(model => model.StartDate)</strong>
            <br />
            <span>@Html.DisplayTextFor(model => model.StartDate)</span>
        </div>
        <div class="span6">
            <strong>@Html.DisplayNameFor(model => model.PolicyID)</strong>
            <br />
            <span>@Html.DisplayTextFor(model => model.PolicyID)</span>
        </div>
    </div>
    <hr />
    <div class="row-fluid">
        <div class="span12">
            <strong>@Html.DisplayNameFor(model => model.Insured)</strong>
            <br />
            <span>@Html.DisplayTextFor(model => model.Insured)</span>
        </div>
    </div>
    <hr />
    <div class="row-fluid">
        <div class="span6">
            <strong>@Html.DisplayNameFor(model => model.UWR)</strong>
            <br />
            <span>@Html.DisplayTextFor(model => model.UWR)</span>
        </div>
        <div class="span6">
            @if (Model.WorkflowType == Validus.Console.DTO.WorfklowItemType.Normal)
            {
                <strong>@Html.DisplayNameFor(model => model.Office)</strong>
                <br />
                <span>@Html.DisplayTextFor(model => model.Office)</span>
            }
            else
            {
                <strong>@Html.DisplayNameFor(model => model.BPC)</strong>
                <br />
                <span>@Html.DisplayTextFor(model => model.BPC)</span>
            }
        </div>
    </div>

    @if (Model.WorkflowType == Validus.Console.DTO.WorfklowItemType.Normal)
    {
        <div class="row-fluid">
            <div class="span6">
                <strong>@Html.DisplayNameFor(model => model.HasQueryResponse)</strong>
                <br />
                <span>@(Model.HasQueryResponse ? "Yes" : "No")</span>
            </div>
            <div class="span6">
                <strong>@Html.DisplayNameFor(model => model.IsRiskBasedPeerReview)</strong>
                <br />
                <span>@(Model.IsRiskBasedPeerReview ? "Yes" : "No")</span>
            </div>
        </div>  
    }
    else if (Model.WorkflowType == Validus.Console.DTO.WorfklowItemType.ContractCertainty)
    {
        <div class="row-fluid">
            <div class="span4">
                <strong>@Html.DisplayNameFor(model => model.IsUrgent)</strong>
                <br />
                <span>@(Model.IsUrgent ? "Yes" : "No")</span>
            </div>
            <div class="span4">
                <strong>@Html.DisplayNameFor(model => model.IsResubmission)</strong>
                <br />
                <span>@(Model.IsResubmission ? "Yes" : "No")</span>
            </div>
            <div class="span4">
                <strong>@Html.DisplayNameFor(model => model.IsForeign)</strong>
                <br />
                <span>@(Model.IsForeign ? "Yes" : "No")</span>
            </div>
        </div>
    }
        
    <hr />
    <div class="row-fluid">
        <div class="span12">
                <strong>@Html.DisplayNameFor(model => model.RelatedDocumentCount) : </strong>
                <span>@Model.RelatedDocumentCount (<a class="btn-link val_open_uw_dms_search_page val-link" data-target="@System.Configuration.ConfigurationManager.AppSettings["UWDmsSearchURL"]@Model.PolicyID">Open DMS Search</a>)</span>
                
        </div>
    </div>
    <div class="row-fluid val_documents_list" style="display: none;">
        <div class="span12">

        </div>
    </div>


    @if (!string.IsNullOrEmpty(Model.AllocatedUser))
    {
        <hr />
        <div class="row-fluid">
            <div class="span12">
                <strong>@Html.DisplayNameFor(model => model.AllocatedUser)</strong>
                <br />
                <span>@Html.DisplayTextFor(model => model.AllocatedUser).ToString().ToUpper()</span>
            </div>
        </div>
    }

    <hr />

    <div class="row-fluid">
        <div class="span12">
            <button class="btn btn-small val-open-webpolicy" title="Open Web Policy" 
				data-target="@Model.WebPolicyURL">
                Web Policy
            </button>

            <button class="btn btn-small val-open-viewflow" title="Open View Flow" 
				data-target="@Model.ViewflowURL">
                View Flow
            </button>

            @if ((Model.Status == Validus.Console.DTO.WorkflowItemStatus.Available) ||
                (HttpContext.Current.User.Identity.Name.ToLower().Equals(Model.AllocatedUser.ToLower())))
            {
                <button class="btn btn-small val-open-task" title="Open Task" data-target="@Model.TaskURL">
                    View Task
                </button>
            }
        </div>
    </div>
</div>
