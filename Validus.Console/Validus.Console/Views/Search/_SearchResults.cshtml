@using Validus.Console.DTO
@using Microsoft.SharePoint.Client.Search.Query;

@model SearchResponseDto
<div class="val-padding">
    @if (Model.HasResults)
    {
        <div class="row-fluid">        
            <div class="span9">
                @foreach (SearchResultsBaseDto item in @Model.SearchResults)
                {
                    if (item.HasHitHighlightSummary)
                    {
                        <div class="val-xslt-spacer val-search-row" data-html="true" data-placement="right" data-content="@item.HitHighlightSummaryHtml" data-trigger="hover" data-title="Hit Summary" rel="popover">
                            @Html.Partial(item.View, item)
                        </div>
                    }
                    else
                    {
                        <div class="val-xslt-spacer val-search-row">
                            @Html.Partial(item.View, item)
                        </div>
                    }
                }
            </div>
            <div id="refinerPane" class="span3">
                <div class="val-refine-pane-container">
                    <div class="val-refine-pane">
                        <div class="val-padding">
                            <strong>Refine...</strong>
                            <div class="refinerSection">
                                <strong>Source</strong>
                                <ul>
                                    @foreach (var source in @Model.ContentSources)
                                    {
                                        <li><input class="contentSourceCheckbox" type="checkbox" checked="@source.IsSearched" data-value="@source.Name"/><span>@source.DisplayName</span></li>    
                                    }
                                </ul>
                            </div>
                            
                            @if (Model.Refiners != default(ResultTable))
                            {
                                foreach (var item in Model.Refiners.ResultRows.GroupBy(r => r["RefinerName"].ToString()).OrderBy(gp => gp.Key))
                                {

                                    <div class="refinerSection">
                                        <strong>@item.Key</strong>
                                        <ul>
                                            @foreach (var i in item.OrderByDescending(j => Int32.Parse(j["RefinementCount"].ToString())))
                                            {
                                                <li><a class="refinerLink" href="#">@i["RefinementName"].ToString()</a> (@i["RefinementCount"].ToString())</li>
                                            }
                                        </ul>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span7 dataTables_info">@Model.StartRow to @Model.EndRow of @Model.TotalAvailable</div>
            <div class="span5">
                @if (Model.HasPaging)
                {
                    <div class="pagination pagination-mini">
                        <ul>
                            @if (Model.PreviousEnabled)
                            {
                                <li class="prev"><a href="#">← Previous</a></li>
                            }
                            else
                            {
                                <li class="prev disabled"><a href="#">← Previous</a></li>
                            }
                            @if (Model.FirstPagingPosition.Display)
                            {
                                if (Model.FirstPagingPosition.Active)
                                {
                                    <li class="active"><a href="#">@Model.FirstPagingPosition.Value</a></li>
                                }
                                else
                                {
                                    <li><a href="#">@Model.FirstPagingPosition.Value</a></li>
                                }

                            }
                            @if (Model.SecondPagingPosition.Display)
                            {
                                if (Model.SecondPagingPosition.Active)
                                {
                                    <li class="active"><a href="#">@Model.SecondPagingPosition.Value</a></li>
                                }
                                else
                                {
                                    <li><a href="#">@Model.SecondPagingPosition.Value</a></li>
                                }

                            }
                            @if (Model.ThirdPagingPosition.Display)
                            {
                                if (Model.ThirdPagingPosition.Active)
                                {
                                    <li class="active"><a href="#">@Model.ThirdPagingPosition.Value</a></li>
                                }
                                else
                                {
                                    <li><a href="#">@Model.ThirdPagingPosition.Value</a></li>
                                }

                            }
                            @if (Model.ForthPagingPosition.Display)
                            {
                                if (Model.ForthPagingPosition.Active)
                                {
                                    <li class="active"><a href="#">@Model.ForthPagingPosition.Value</a></li>
                                }
                                else
                                {
                                    <li><a href="#">@Model.ForthPagingPosition.Value</a></li>
                                }
                            }
                            @if (Model.FifthPagingPosition.Display)
                            {
                                if (Model.FifthPagingPosition.Active)
                                {
                                    <li class="active"><a href="#">@Model.FifthPagingPosition.Value</a></li>
                                }
                                else
                                {
                                    <li><a href="#">@Model.FifthPagingPosition.Value</a></li>
                                }
                            }
                            @if (Model.NextEnabled)
                            {
                                <li class="next"><a href="#">Next → </a></li>
                            }
                            else
                            {
                                <li class="next disabled"><a href="#">Next → </a></li>
                            }
                        </ul>
                    </div>
                }    
            </div>
        </div>
    }
    else
    {
        <div class="row-fluid">        
            <div class="span9"><span>No search results</span></div>
            @if (Model.IsSourceRestricted)
            {
                <div id="refinerPane" class="span3">
                    <div class="val-refine-pane-container">
                        <div class="val-refine-pane">
                            <div class="val-padding">
                                <strong>Refine...</strong>
                                <div class="refinerSection">
                                    <strong>Source</strong>
                                    <ul>
                                        @foreach (var source in @Model.ContentSources)
                                        {
                                            <li><input class="contentSourceCheckbox" type="checkbox" checked="@source.IsSearched" data-value="@source.Name"/><span>@source.DisplayName</span></li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>