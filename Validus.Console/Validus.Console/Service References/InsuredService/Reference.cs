//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Validus.Console.InsuredService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsuredMeasures", Namespace="http://schemas.datacontract.org/2004/07/Validus.Services.DataContract.ASWarehouse" +
        "")]
    [System.SerializableAttribute()]
    public partial class InsuredMeasures : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> GrossIncurredLossRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> GrossSyndicateEPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SyndicateEPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> USMPremiumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> GrossIncurredLossRatio {
            get {
                return this.GrossIncurredLossRatioField;
            }
            set {
                if ((this.GrossIncurredLossRatioField.Equals(value) != true)) {
                    this.GrossIncurredLossRatioField = value;
                    this.RaisePropertyChanged("GrossIncurredLossRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> GrossSyndicateEPI {
            get {
                return this.GrossSyndicateEPIField;
            }
            set {
                if ((this.GrossSyndicateEPIField.Equals(value) != true)) {
                    this.GrossSyndicateEPIField = value;
                    this.RaisePropertyChanged("GrossSyndicateEPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuredName {
            get {
                return this.InsuredNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredNameField, value) != true)) {
                    this.InsuredNameField = value;
                    this.RaisePropertyChanged("InsuredName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SyndicateEPI {
            get {
                return this.SyndicateEPIField;
            }
            set {
                if ((this.SyndicateEPIField.Equals(value) != true)) {
                    this.SyndicateEPIField = value;
                    this.RaisePropertyChanged("SyndicateEPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> USMPremium {
            get {
                return this.USMPremiumField;
            }
            set {
                if ((this.USMPremiumField.Equals(value) != true)) {
                    this.USMPremiumField = value;
                    this.RaisePropertyChanged("USMPremium");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsuredDetails", Namespace="http://schemas.datacontract.org/2004/07/Validus.Services.DataContract.ASWarehouse" +
        "")]
    [System.SerializableAttribute()]
    public partial class InsuredDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string COBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> GrossIncurredClaimsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> GrossIncurredLossRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsdNmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LossRatioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> NewClaimCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PrecentagePaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SyndicateEPIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SyndicateGrossOutstandingClaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SyndicateGrossPaidClaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TechnicalPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> USMPremiumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UWRField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountYear {
            get {
                return this.AccountYearField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountYearField, value) != true)) {
                    this.AccountYearField = value;
                    this.RaisePropertyChanged("AccountYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string COB {
            get {
                return this.COBField;
            }
            set {
                if ((object.ReferenceEquals(this.COBField, value) != true)) {
                    this.COBField = value;
                    this.RaisePropertyChanged("COB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> GrossIncurredClaims {
            get {
                return this.GrossIncurredClaimsField;
            }
            set {
                if ((this.GrossIncurredClaimsField.Equals(value) != true)) {
                    this.GrossIncurredClaimsField = value;
                    this.RaisePropertyChanged("GrossIncurredClaims");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> GrossIncurredLossRatio {
            get {
                return this.GrossIncurredLossRatioField;
            }
            set {
                if ((this.GrossIncurredLossRatioField.Equals(value) != true)) {
                    this.GrossIncurredLossRatioField = value;
                    this.RaisePropertyChanged("GrossIncurredLossRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsdNm {
            get {
                return this.InsdNmField;
            }
            set {
                if ((object.ReferenceEquals(this.InsdNmField, value) != true)) {
                    this.InsdNmField = value;
                    this.RaisePropertyChanged("InsdNm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> LossRatio {
            get {
                return this.LossRatioField;
            }
            set {
                if ((this.LossRatioField.Equals(value) != true)) {
                    this.LossRatioField = value;
                    this.RaisePropertyChanged("LossRatio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> NewClaimCount {
            get {
                return this.NewClaimCountField;
            }
            set {
                if ((this.NewClaimCountField.Equals(value) != true)) {
                    this.NewClaimCountField = value;
                    this.RaisePropertyChanged("NewClaimCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolID {
            get {
                return this.PolIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PolIDField, value) != true)) {
                    this.PolIDField = value;
                    this.RaisePropertyChanged("PolID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PrecentagePaid {
            get {
                return this.PrecentagePaidField;
            }
            set {
                if ((this.PrecentagePaidField.Equals(value) != true)) {
                    this.PrecentagePaidField = value;
                    this.RaisePropertyChanged("PrecentagePaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SyndicateEPI {
            get {
                return this.SyndicateEPIField;
            }
            set {
                if ((this.SyndicateEPIField.Equals(value) != true)) {
                    this.SyndicateEPIField = value;
                    this.RaisePropertyChanged("SyndicateEPI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SyndicateGrossOutstandingClaim {
            get {
                return this.SyndicateGrossOutstandingClaimField;
            }
            set {
                if ((this.SyndicateGrossOutstandingClaimField.Equals(value) != true)) {
                    this.SyndicateGrossOutstandingClaimField = value;
                    this.RaisePropertyChanged("SyndicateGrossOutstandingClaim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SyndicateGrossPaidClaim {
            get {
                return this.SyndicateGrossPaidClaimField;
            }
            set {
                if ((this.SyndicateGrossPaidClaimField.Equals(value) != true)) {
                    this.SyndicateGrossPaidClaimField = value;
                    this.RaisePropertyChanged("SyndicateGrossPaidClaim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TechnicalPremium {
            get {
                return this.TechnicalPremiumField;
            }
            set {
                if ((this.TechnicalPremiumField.Equals(value) != true)) {
                    this.TechnicalPremiumField = value;
                    this.RaisePropertyChanged("TechnicalPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> USMPremium {
            get {
                return this.USMPremiumField;
            }
            set {
                if ((this.USMPremiumField.Equals(value) != true)) {
                    this.USMPremiumField = value;
                    this.RaisePropertyChanged("USMPremium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UWR {
            get {
                return this.UWRField;
            }
            set {
                if ((object.ReferenceEquals(this.UWRField, value) != true)) {
                    this.UWRField = value;
                    this.RaisePropertyChanged("UWR");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InsuredService.IInsuredService")]
    public interface IInsuredService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsuredService/ListInsuredMeasures", ReplyAction="http://tempuri.org/IInsuredService/ListInsuredMeasuresResponse")]
        System.Collections.Generic.List<Validus.Console.InsuredService.InsuredMeasures> ListInsuredMeasures();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsuredService/ListInsuredMeasures", ReplyAction="http://tempuri.org/IInsuredService/ListInsuredMeasuresResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Validus.Console.InsuredService.InsuredMeasures>> ListInsuredMeasuresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsuredService/GetInsuredMeasuresById", ReplyAction="http://tempuri.org/IInsuredService/GetInsuredMeasuresByIdResponse")]
        Validus.Console.InsuredService.InsuredMeasures GetInsuredMeasuresById(string insuredName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsuredService/GetInsuredMeasuresById", ReplyAction="http://tempuri.org/IInsuredService/GetInsuredMeasuresByIdResponse")]
        System.Threading.Tasks.Task<Validus.Console.InsuredService.InsuredMeasures> GetInsuredMeasuresByIdAsync(string insuredName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsuredService/GetInsuredDetailsByName", ReplyAction="http://tempuri.org/IInsuredService/GetInsuredDetailsByNameResponse")]
        System.Collections.Generic.List<Validus.Console.InsuredService.InsuredDetails> GetInsuredDetailsByName(string insuredName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsuredService/GetInsuredDetailsByName", ReplyAction="http://tempuri.org/IInsuredService/GetInsuredDetailsByNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Validus.Console.InsuredService.InsuredDetails>> GetInsuredDetailsByNameAsync(string insuredName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsuredService/GetInsuredDetailsByNameAndCobs", ReplyAction="http://tempuri.org/IInsuredService/GetInsuredDetailsByNameAndCobsResponse")]
        System.Collections.Generic.List<Validus.Console.InsuredService.InsuredDetails> GetInsuredDetailsByNameAndCobs(string insuredName, string cobs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInsuredService/GetInsuredDetailsByNameAndCobs", ReplyAction="http://tempuri.org/IInsuredService/GetInsuredDetailsByNameAndCobsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Validus.Console.InsuredService.InsuredDetails>> GetInsuredDetailsByNameAndCobsAsync(string insuredName, string cobs);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInsuredServiceChannel : Validus.Console.InsuredService.IInsuredService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsuredServiceClient : System.ServiceModel.ClientBase<Validus.Console.InsuredService.IInsuredService>, Validus.Console.InsuredService.IInsuredService {
        
        public InsuredServiceClient() {
        }
        
        public InsuredServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InsuredServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsuredServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InsuredServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Validus.Console.InsuredService.InsuredMeasures> ListInsuredMeasures() {
            return base.Channel.ListInsuredMeasures();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Validus.Console.InsuredService.InsuredMeasures>> ListInsuredMeasuresAsync() {
            return base.Channel.ListInsuredMeasuresAsync();
        }
        
        public Validus.Console.InsuredService.InsuredMeasures GetInsuredMeasuresById(string insuredName) {
            return base.Channel.GetInsuredMeasuresById(insuredName);
        }
        
        public System.Threading.Tasks.Task<Validus.Console.InsuredService.InsuredMeasures> GetInsuredMeasuresByIdAsync(string insuredName) {
            return base.Channel.GetInsuredMeasuresByIdAsync(insuredName);
        }
        
        public System.Collections.Generic.List<Validus.Console.InsuredService.InsuredDetails> GetInsuredDetailsByName(string insuredName) {
            return base.Channel.GetInsuredDetailsByName(insuredName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Validus.Console.InsuredService.InsuredDetails>> GetInsuredDetailsByNameAsync(string insuredName) {
            return base.Channel.GetInsuredDetailsByNameAsync(insuredName);
        }
        
        public System.Collections.Generic.List<Validus.Console.InsuredService.InsuredDetails> GetInsuredDetailsByNameAndCobs(string insuredName, string cobs) {
            return base.Channel.GetInsuredDetailsByNameAndCobs(insuredName, cobs);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Validus.Console.InsuredService.InsuredDetails>> GetInsuredDetailsByNameAndCobsAsync(string insuredName, string cobs) {
            return base.Channel.GetInsuredDetailsByNameAndCobsAsync(insuredName, cobs);
        }
    }
}
